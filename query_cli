# == BSD2 LICENSE ==
# Copyright (c) 2015, Tidepool Project
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of the associated License, which is identical to the BSD 2-Clause
# License as published by the Open Source Initiative at opensource.org.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the License for more details.
# 
# You should have received a copy of the License along with this program; if
# not, you can obtain one from Tidepool Project at tidepool.org.
# == BSD2 LICENSE ==


# This file should be run with 'source' (also known as '.' on linux/macs).
#
# It creates several functions that allow the user to login and then query data
# via the octopus query endpoint.
#
# Note that this is currently set up to query the Tidepool development server.
# However, you can change the TIDEPOOL_SERVER environment variable and
# use a different server. See Tidepool for details

# Use the first line if you're running a local server.
# Most people will use the second for Tidepool's dev server.
TIDEPOOL_SERVER="http://localhost:8009"
#TIDEPOOL_SERVER="https://devel-api.tidepool.io"
#
#
# Usage example:
#-------------------
#
# $ . query_cli
#
# $ tp_login c@c.com
# Enter host password for user 'c@c.com':
# {"userid":"467c4642d5","username":"c@c.com","emails":["c@c.com"]}
# You're now logged in.
#
# $ tp_setuser 467c4642d5
# User ID now set to '467c4642d5'.
#
# $ tp_settypes cbg
# Query types now set to 'cbg'.
#
# $ tp_setstartdate 2014-08-20
# Query start date now set to '2014-08-20T00:00:00.000Z'.
#
# $ tp_setenddate 2014-08-21
# Query end date now set to '2014-08-21T00:00:00.000Z'.
#
# $ tp_query >output.txt
# The query will be:
# METAQUERY WHERE userid IS 467c4642d5 QUERY TYPE IN cbg WHERE time > 2014-08-20T00:00:00.000Z AND time < 2014-08-21T00:00:00.000Z SORT BY time AS Timestamp REVERSED

# Enter to run the query or [c] to cancel:
#   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
#                                  Dload  Upload   Total   Spent    Left  Speed
# 100  100k    0  100k  100   163  20347     32  0:00:05  0:00:05 --:--:-- 22766
#   [10:32 AM][~/tidepool/octopus][kjq/cleanerQuery]
#-------------------


# you can also do it all in one command (with more variation possible) like this:
# tp_query 467c4642d5 cbg "WHERE time > 2014-08-20T00:00:00.000Z AND time < 2014-08-21T00:00:00.000Z"




# Login to the tidepool-platfrom and get a session-token
tp_login() {

    if [ -z "$1" ]; then
        echo "your user name is required (i.e. tp_login <username>)"
        return
    fi

    # save the headers in a tempfile so we can extract the token
    TEMPFILE="tplogin-$$.tmp"
    curl -s -X POST --dump-header $TEMPFILE -u $1 $TIDEPOOL_SERVER/auth/login
    # now put the token in the environment
    export LOGIN_TOKEN=$(grep "x-tidepool-session-token:" $TEMPFILE |tr -d '\n\r')
    rm $TEMPFILE

    # are you logged in?
    if [ -z "$LOGIN_TOKEN" ]; then
        echo ""
        echo "Something went wrong trying to login. Bad password? Wrong server?"
        return
    fi
    echo ""
    echo "You're now logged in."
}

# Logout by clearing the token we are storing
tp_logout() {
    export LOGIN_TOKEN=
    echo ""
    echo "You have now logged out."
}

tp_setuser() {
    if [ -z "$1" ]; then
        echo "we need the id of the user whose data you are querying i.e. tp_user <userid>"
        return
    fi
    export TP_USERID=$1
    echo "User ID now set to '$TP_USERID'".
}

tp_settypes() {
    if [ -z "$1" ]; then
        export TP_QUERYTYPES=
    else
        export TP_QUERYTYPES=$1
    fi
    echo "Query types now set to '$TP_QUERYTYPES'".
}

tp_setstartdate() {
    if [ -z "$1" ]; then
        export TP_STARTDATE=
        echo "Query start date not set."
    else
        export TP_STARTDATE="$1T00:00:00.000Z"
        echo "Query start date now set to '$TP_STARTDATE'".
    fi
}

tp_setenddate() {
    if [ -z "$1" ]; then
        export TP_ENDDATE=
        echo "Query end date not set."
    else
        export TP_ENDDATE="$1T00:00:00.000Z"
        echo "Query end date now set to '$TP_ENDDATE'".
    fi
}

tp_setinids() {
    if [ -z "$1" ]; then
        export TP_INIDS=
        echo "Query uploadIDs not set."
    else
        export TP_INIDS="$@"
        echo "Query uploadIDs now set to '$TP_INIDS'".
    fi
}

_queryhelper() {

    # are you logged in?
    if [ -z "$LOGIN_TOKEN" ]; then
        echo "please login first i.e. tp_login <username>"
        return
    fi

    # do we have a user id for us to query?
    if [ -z "$TP_USERID" ]; then
        if [ -z "$1" ]; then
            echo "we need the id of the user whose data you are querying i.e. tp_query <userid>"
            return
        else
            TP_USERID=$1
        fi
    fi

    # do you want to specify different types to query for?
    if [ -n TP_QUERYTYPES ]; then
        QUERY_TYPES=$TP_QUERYTYPES
    else
        QUERY_TYPES="cbg, smbg, bolus, wizard"
    fi

    if [ -n "$2" ]; then
        QUERY_TYPES=$2
    fi

}
# Run the data query for a given user id
tp_query() {

    _queryhelper

    # do you want to constrain the query by time?
    QUERY_WHERE=""

    if [ -n "$3" ]; then
        # e.g. "WHERE time > 2014-11-24T05:00:00.000Z AND time < 2014-12-24T05:00:00.000Z"
        QUERY_WHERE=$3
    else
        if [ -n "$TP_STARTDATE" -a -n "$TP_ENDDATE" ]; then
            QUERY_WHERE="WHERE time > $TP_STARTDATE AND time < $TP_ENDDATE"
        elif [ -n "$TP_STARTDATE" ]; then
            QUERY_WHERE="WHERE time > $TP_STARTDATE"
        elif [ ]; then
            QUERY_WHERE="WHERE time < $TP_ENDDATE"
        fi
    fi

    QUERY="METAQUERY WHERE userid IS $TP_USERID QUERY TYPE IN $QUERY_TYPES $QUERY_WHERE SORT BY time AS Timestamp REVERSED"

    # send these prompts to stdout so that you can redirect the output of this
    # command to a file to save the result
    >&2 echo "The query will be:"
    >&2 echo $QUERY
    >&2 echo ""
    read  -p "Enter to run the query or [c] to cancel:" input

    if [ "$input" = "c" ]; then
        echo ""
        echo "Query cancelled."
    else
        curl -X POST -H "$LOGIN_TOKEN" -d "$QUERY" $TIDEPOOL_SERVER/query/data
    fi
}

tp_inquery() {

    _queryhelper

    # do you want to constrain the query by time?
    QUERY_WHERE="WHERE uploadId IN $TP_INIDS"

    if [ -n "$3" ]; then
        # e.g. "WHERE time > 2014-11-24T05:00:00.000Z AND time < 2014-12-24T05:00:00.000Z"
        QUERY_WHERE=$3
    fi

    QUERY="METAQUERY WHERE userid IS $TP_USERID QUERY TYPE IN $QUERY_TYPES $QUERY_WHERE SORT BY time AS Timestamp REVERSED"

    # send these prompts to stdout so that you can redirect the output of this
    # command to a file to save the result
    >&2 echo "The query will be:"
    >&2 echo $QUERY
    >&2 echo ""
    read  -p "Enter to run the query or [c] to cancel:" input

    if [ "$input" = "c" ]; then
        echo ""
        echo "Query cancelled."
    else
        curl -X POST -H "$LOGIN_TOKEN" -d "$QUERY" $TIDEPOOL_SERVER/query/data
    fi
}